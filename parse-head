#include <iostream>
#include <string>
#include <cstdlib>
#include <unistd.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <linux/in.h>
#include <netdb.h>

using std::cout;
using std::cin;
using std::cerr;
using std::endl;
using std::string;

const string ERRMSG = "\33[1;31mError: \33[0m";
const string WARNMSG = "\33[1;35mWARNING: \33[0m";
const unsigned long int SOCKETSIZE = 2097152;
const unsigned short int PORT = 443;
const string API_MAIN = "httpbin.org";
const string API_PARSER = "is.snssdk.com";
const string USER_AGENT = "Mozilla/5.0 (Linux; Android 12; XT2201-2)" \
	" AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.57" \
	" Mobile Safari/537.36";
const string ACCEPT = "application/json; charset: UTF-8";
const string CONNECTION = "Close";

class Parser
{
	private:
		int sockfd {};
		unsigned long int recvbytes {};
		long int recvbyte {};
		char *buffer {};
		struct sockaddr_in addr {};
		struct hostent *host {};
		void full_addr(struct sockaddr_in &);
		string make_header(const char *, const char *, const char *) const;
	public:
		Parser(void);
		~Parser(void);
		void errmsg(const string &) const;
		void warnmsg(const string &) const;
		void show(void) const;
		// friend struct *hostent gethostbyname(const char* __name);
};